# Complete the function/method (depending on the language) to return true/True when its argument is an array 
# that has the same nesting structures and same corresponding length of nested arrays as the first array.

# For example:

# # should return True
# same_structure_as([ 1, 1, 1 ], [ 2, 2, 2 ] )
# same_structure_as([ 1, [ 1, 1 ] ], [ 2, [ 2, 2 ] ] )

# # should return False 
# same_structure_as([ 1, [ 1, 1 ] ], [ [ 2, 2 ], 2 ] )
# same_structure_as([ 1, [ 1, 1 ] ], [ [ 2 ], 2 ] )

# # should return True
# same_structure_as([ [ [ ], [ ] ] ], [ [ [ ], [ ] ] ] )

# # should return False
# same_structure_as([ [ [ ], [ ] ] ], [ [ 1, 1 ] ] )


def clear_list(lst):
    for i in range(len(lst)):
        if isinstance(lst[i], list):
            clear_list(lst[i])
        else:
            lst[i] = None
    return lst

def same_structure_as(original,other):
    if all([original, other]):
        return clear_list(original) == clear_list(other)
    return False