# Your task is to make a simple class called SnakesLadders. 
# The test cases will call the method play(die1, die2) independantly of the state of the game or the player turn. 
# The variables die1 and die2 are the die thrown in a turn and are both integers between 1 and 6. 
# The player will move the sum of die1 and die2.
# The Board: https://raw.githubusercontent.com/adrianeyre/codewars/master/Ruby/Authored/snakesandladders.jpg

# Rules
# 1.  There are two players and both start off the board on square 0.

# 2.  Player 1 starts and alternates with player 2.

# 3.  You follow the numbers up the board in order 1=>100

# 4.  If the value of both die are the same then that player will have another go.

# 5.  Climb up ladders. The ladders on the game board allow you to move upwards and get ahead faster. 
#     If you land exactly on a square that shows an image of the bottom of a ladder, 
#     then you may move the player all the way up to the square at the top of the ladder. (even if you roll a double).

# 6.  Slide down snakes. Snakes move you back on the board because you have to slide down them. 
#     If you land exactly at the top of a snake, slide move the player all the way to the square 
#     at the bottom of the snake or chute. (even if you roll a double).

# 7.  Land exactly on the last square to win. The first person to reach the highest square on the board wins. 
#     But there's a twist! If you roll too high, your player "bounces" off the last square and moves back. 
#     You can only win by rolling the exact number needed to land on the last square. 

# 8.  If the Player rolled a double and lands on the finish square “100” without any remaining moves 
#     then the Player wins the game and does not have to roll again.


class SnakesLadders():
    ladders = {
        2 : 38,
        7 : 14,
        8 : 31,
        15: 26,
        28: 84,
        21: 42,
        36: 44,
        51: 67,
        78: 98,
        71: 91,
        87: 94
    }

    snakes = {
        99: 80,
        95: 75,
        89: 68,
        74: 53,
        64: 60,
        62: 19,
        46: 25,
        49: 11,
        16: 6,
        92: 88
    }

    def __init__(self):
        self.results = {"Player 1": 0, "Player 2": 0}
        self.turn = 0

    def play(self, die1, die2):
        if self.turn == "Game over!":
            return self.turn
        player = ["Player 1", "Player 2"][self.turn % 2]
        self.results[player] += (die1 + die2)
        if self.results[player] > 100:
            self.results[player] = 100 + 100 - self.results[player]
        if self.results[player] in SnakesLadders.ladders:
            self.results[player] = SnakesLadders.ladders[self.results[player]]
        elif self.results[player] in SnakesLadders.snakes:
            self.results[player] = SnakesLadders.snakes[self.results[player]]
        if die1 != die2:
            self.turn += 1
        if self.results[player] == 100:
            self.turn = "Game over!"
            return f'{player} Wins!'
        else:
            return f'{player} is on square {self.results[player]}'