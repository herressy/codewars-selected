# Once upon a time, on a way through the old wild mountainous west,â€¦
# â€¦ a man was given directions to go from one point to another. The directions were "NORTH", "SOUTH", "WEST", "EAST". 
# Clearly "NORTH" and "SOUTH" are opposite, "WEST" and "EAST" too.

# Going to one direction and coming back the opposite direction right away is a needless effort. 
# Since this is the wild west, with dreadfull weather and not much water, 
# it's important to save yourself some energy, otherwise you might die of thirst!

# How I crossed a mountainous desert the smart way.
# The directions given to the man are, for example, the following (depending on the language):

# ["NORTH", "SOUTH", "SOUTH", "EAST", "WEST", "NORTH", "WEST"].
# or
# { "NORTH", "SOUTH", "SOUTH", "EAST", "WEST", "NORTH", "WEST" };
# or
# [North, South, South, East, West, North, West]
# You can immediatly see that going "NORTH" and immediately "SOUTH" is not reasonable, 
# better stay to the same place! So the task is to give to the man a simplified version of the plan. 
# A better plan in this case is simply:

# ["WEST"]
# or
# { "WEST" }
# or
# [West]


DIRECTIONS = {
    'SOUTH': 'NORTH',
    'NORTH': 'SOUTH',
    'WEST': 'EAST',
    'EAST': 'WEST'
}

def dirReduc(arr):
    while True:
        for x in range(len(arr[:-1])):
            if arr[x] == DIRECTIONS[arr[x+1]]:
                arr[x] = '0'
                arr[x+1] = '0'
        if arr.count('0') == 0: break
        while arr.count('0') > 0:
            arr.remove('0')
    return arr
