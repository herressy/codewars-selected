# Given a positive number n > 1 find the prime factor decomposition of n. 
# The result will be a string with the following form:

#  "(p1**n1)(p2**n2)...(pk**nk)"
# with the p(i) in increasing order and n(i) empty if n(i) is 1.

# Example: n = 86240 should return "(2**5)(5)(7**2)(11)"


from gmpy2 import next_prime

def prime_factors(n):
    prime = 2
    result = ''
    while n >= prime:
        c = 0
        while not n % prime:
            n /= prime
            c += 1
        if c:
            result += f'({prime}**{c})'
        prime = next_prime(prime)
    return result.replace('**1', '')